<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>(L2) Ensure 'Let Windows apps *' is set to 'Enabled: Force Deny'</Title>
		<Description><![CDATA[<style>.outer-FixletMessage {width:70%; border:2px solid #73b1e1; font-family:verdana; margin-bottom:1cm; background:#f7ffff; float:left;} .fixlet-desc {background:#4051A2; color:#29638c; font-weight:bold; padding:3px; border-bottom:2px solid #63bdff;} .FixletMessage {padding:1ex 1ex 0 1ex; font-size:10pt;} .FixletMessage h1 {font-size:11pt; margin:0 0 10px 0;} .description {margin-bottom:20px;} .word-wrap {word-break:break-all; word-wrap: break-word; padding-right:1em;} .details {width:100%; padding-bottom:10px; clear:both;} .details .narrow-cell {float:left; width:100%; margin-bottom:10px;} .details .detail div {padding-right:8px;} .details .detail div.title {font-size:8pt; font-weight:bold;} .details .detail.wide {float:none; width:100%; margin:10px auto 10px auto; clear:both;} .details .detail.wide div {float:none;} .details .detail.wide div.first-child {float:none; margin-bottom:6px;} .details .detail.narrow {float:left; width:30%; margin-bottom:10px;} .details .detail.narrow div {float:none;} .details .detail.narrow div.first-child {width:160px;} .parameters {border:1px dotted #dcdcdc; padding:6px; margin:0 0 10px 0; clear:both; overflow:auto} .parameters .p {margin:2px auto 10px auto; clear:both;} .parameters .parameter-name {font-weight:bold; font-size:9pt;} .parameters .small {font-size:9pt;} .parameter {margin-bottom:15px;} .parameter .row.th {font-size:8pt; font-weight:bold;} .parameters .float .row {min-height:20px; height:auto !important; height:20px; clear:both;} .parameters .float .row div {float:left; margin-bottom:4px;} .parameters .float .row div.first-col {width:160px;} .parameters .float .row div.second-col {width:65%; padding-bottom:2px; word-wrap:break-word;} .parameters .float .row div.call-out {color:#ff4a4a; font-weight:bold;} .parameters .save {margin-bottom:20px;} .parameters .save-btn {position:relative; left:10; top:6;} .parameters .save-msg {display: none; position:relative; left:30; top:3; color: #4F8A10; background-color: #DFF2BF; border: 1px solid; padding:10px 10px 10px 10px;} .info {clear:both;} .note {clear:both;} .scm-id {font-size:7pt; margin:1pt 0;} .details ul.wide-list {margin:4px auto; margin-left:20px!important; font-size:9pt; padding-left:0;} .details ul.wide-list li {margin-bottom:4px;} .input-radio-set {float:left; width:100%; margin-bottom:10px; margin-top:10px;} .input-radio-group {float:left; width:100%; margin-bottom:6px;} .input-radio-group label {margin-left:5px; margin-right:5px;} .input-radio-title {float:left; font-size:9pt;} .input-radio-text {float: left; width: 75px; padding-top: 2px;} .radio-buttons {vertical-align: middle;} .cce-item {margin-top:10px; margin-bottom:15px;} .cce-header {margin-bottom:4px;} .warning { color: red; }</style><div class="FixletMessage"><h1>(L2) Ensure 'Let Windows apps *' is set to 'Enabled: Force Deny'</h1><div class="description"><p xmlns="http://www.w3.org/1999/xhtml">These policy settings specify whether Windows apps can access personal data, resources or other applications.</p>    <p xmlns="http://www.w3.org/1999/xhtml">The recommended state for this setting is: <span class="inline_block">Enabled: Force Deny</span>.</p> <br /><br /> <b>Rationale:</b><br />                   <p xmlns="http://www.w3.org/1999/xhtml">The following 15 settings are in scope: Let Windows apps access account information, Let Windows apps access call history, Let Windows apps access contacts, Let Windows apps access email, Let Windows apps access location, Let Windows apps access messaging, Let Windows apps access motion, Let Windows apps access the calendar, Let Windows apps access the camera, Let Windows apps access the microphone, Let Windows apps access trusted devices, Let Windows apps control radios, Let Windows apps sync with devices, Let Windows apps make phone calls, Let Windows apps access notifications.</p>                 <br /><br /> <b>Remediation:</b><br />                   <div xmlns="http://www.w3.org/1999/xhtml">                      <p>                         <p>To establish the recommended configuration via GP, set the following UI path to <span class="inline_block">Enabled: Force Deny</span>:</p>                         <code class="code_block">Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access account information
 | Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access call history | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access contacts
 | Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access email | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access location | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access messaging | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access motion | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access the calendar | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access the camera | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access the microphone | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access trusted devices
 | Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps control radios
 | Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps sync with devices | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps make phone calls | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access notifications</code>                         <p class="bold">Impact:</p>                         <p>                            <p>Windows apps will be restricted from accessing potentially sensitive information or resources, and employees in your organization will not be able to change it.</p>                         </p>                      </p>                   </div>                </div><div class="linked-content"><p>The measured values for this check are captured in the <?relevance links of bes fixlets whose (analysis flag of it and mime field "x-fixlet-scm-analysis-id" of it = "20kpqj3m-ukvc-51q1-u74c-vcijww83ds16" AND (if (custom site flag of site of current fixlet) then name of site of it = name of site of current fixlet else id of site of it = id of site of current fixlet) of it)?> analysis.</p></div><div class="details"><div class="narrow-cell word-wrap"><div class="detail narrow"><div class="title">Source ID</div><div id="tem-source-id-display">CCE|NULL</div></div><div class="detail narrow"><div class="title">Source Release Date</div><div id="tem-source-release-date-display">Mon, 26 Feb 2018 12:00:00</div></div><div class="detail narrow"><div class="title">Category</div><div id="tem-category-display">OCISO_SecEng_Custom</div></div></div><div class="narrow-cell word-wrap"><div class="detail narrow"><div class="title">XCCDF Rule ID</div><div id="nist-xccdf-rule-id-display">xccdf_org.cisecurity.benchmarks_rule_18.9.5.1_Ensure_Let_Windows_apps_is_set_to_Enabled_Force_Deny</div></div><div class="detail narrow"><div class="title">XCCDF Profile ID</div><div id="nist-xccdf-profile-id-display">xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Member_Server</div></div><div class="detail narrow"><div class="title">XCCDF Benchmark Status</div><div id="nist-xccdf-benchmark-status-display">interim</div></div></div><div class="narrow-cell word-wrap"><div class="detail narrow"><div class="title">XCCDF Benchmark Version</div><div id="nist-xccdf-benchmark-version-display">0.0.0</div></div><div class="detail narrow"><div class="title">XCCDF Benchmark ID</div><div id="nist-xccdf-benchmark-id-display">xccdf_org.cisecurity.benchmarks_benchmark_1.0.0_CIS_Microsoft_Windows_Server_2016_Security_Benchmark</div></div><div class="detail narrow"><div class="title">OVAL Definitions</div><div id="mitre-oval-definition-ids-display">oval:org.cisecurity.benchmarks.microsoft_windows</div></div></div><div class="narrow-cell word-wrap"><div class="detail narrow"><div class="title">CPEs</div><div id="tem-scm-platform-display">cpe:/o:microsoft:Win2016</div></div></div><div class="wide detail"><div class="title">CCEs</div><div class="cce-item">CCE|NULL</div></div></div><br /><div class="parameters"><div class="parameter"><div class="p details float"><div class="row"><div class="first-col word-wrap">Check compliance:</div><DIV class=" second-col">Condition 1 and Condition 2 and Condition 3 and Condition 4 and Condition 5 and Condition 6 and Condition 7 and Condition 8 and Condition 9 and Condition 10 and Condition 11 and Condition 12 and Condition 13 and Condition 14 and Condition 15</DIV></DIV></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 1:</DIV>
<DIV class=" second-col">LetAppsAccessAccountInfo</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessAccountInfo')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c1-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 2:</DIV>
<DIV class=" second-col">LetAppsAccessCalendar</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessCalendar')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c2-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 3:</DIV>
<DIV class=" second-col">LetAppsAccessCallHistory</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessCallHistory')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c3-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 4:</DIV>
<DIV class=" second-col">LetAppsAccessCamera</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessCamera')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c4-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 5:</DIV>
<DIV class=" second-col">LetAppsAccessContacts</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessContacts')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c5-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 6:</DIV>
<DIV class=" second-col">LetAppsAccessEmail</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessEmail')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c6-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 7:</DIV>
<DIV class=" second-col">LetAppsAccessLocation</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessLocation')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c7-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 8:</DIV>
<DIV class=" second-col">LetAppsAccessMessaging</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessMessaging')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c8-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 9:</DIV>
<DIV class=" second-col">LetAppsAccessMicrophone</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessMicrophone')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c9-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 10:</DIV>
<DIV class=" second-col">LetAppsAccessMotion</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessMotion')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c10-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 11:</DIV>
<DIV class=" second-col">LetAppsAccessRadios</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessRadios')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c11-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 12:</DIV>
<DIV class=" second-col">LetAppsAccessTrustedDevices</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessTrustedDevices')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c12-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 13:</DIV>
<DIV class=" second-col">LetAppsSyncWithDevices</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsSyncWithDevices')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c13-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 14:</DIV>
<DIV class=" second-col">LetAppsAccessPhone</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessPhone')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c14-input size=25 value=2></DIV></DIV>
<DIV class=parameter>
<DIV class="p details float">
<DIV class=row>
<DIV class="first-col word-wrap">Condition 15:</DIV>
<DIV class=" second-col">LetAppsAccessNotifications</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Details:</DIV>
<DIV class=" second-col">registry(:hklm, 'Software\Policies\Microsoft\Windows\AppPrivacy', 'LetAppsAccessNotifications')</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Compliant if:</DIV>
<DIV class=" second-col">values.oval?(:all, :at_least_one_exists) {|o| o.reg_dword? and o.to_i == input.to_i }</DIV></DIV>
<DIV class=row>
<DIV class="first-col word-wrap">Default value:</DIV>
<DIV class=" second-col">2</DIV></DIV></DIV>
<DIV class=p>Desired value: &nbsp;<INPUT id=c15-input size=25 value=2></DIV></DIV>
<DIV class=info>Click "Save" to update this check.</DIV>
<DIV class=note><B>Note:</B> Only a custom copy of this check can be configured.</DIV><BR>
<DIV class=save><INPUT id=save_parameters_button class=save-btn type=button value=Save><SPAN id=save-msg class=save-msg>Configuration saved.</SPAN></DIV></DIV></DIV><script>var JSON;if(!JSON){JSON={}}(function(){"use strict";function f(e){return e<10?"0"+e:e}function quote(e){escapable.lastIndex=0;return escapable.test(e)?'"'+e.replace(escapable,function(e){var t=meta[e];return typeof t==="string"?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+e+'"'}function str(e,t){var n,r,i,s,o=gap,u,a=t[e];if(a&&typeof a==="object"&&typeof a.toJSON==="function"){a=a.toJSON(e)}if(typeof rep==="function"){a=rep.call(t,e,a)}switch(typeof a){case"string":return quote(a);case"number":return isFinite(a)?String(a):"null";case"boolean":case"null":return String(a);case"object":if(!a){return"null"}gap+=indent;u=[];if(Object.prototype.toString.apply(a)==="[object Array]"){s=a.length;for(n=0;n<s;n+=1){u[n]=str(n,a)||"null"}i=u.length===0?"[]":gap?"[\n"+gap+u.join(",\n"+gap)+"\n"+o+"]":"["+u.join(",")+"]";gap=o;return i}if(rep&&typeof rep==="object"){s=rep.length;for(n=0;n<s;n+=1){if(typeof rep[n]==="string"){r=rep[n];i=str(r,a);if(i){u.push(quote(r)+(gap?": ":":")+i)}}}}else{for(r in a){if(Object.prototype.hasOwnProperty.call(a,r)){i=str(r,a);if(i){u.push(quote(r)+(gap?": ":":")+i)}}}}i=u.length===0?"{}":gap?"{\n"+gap+u.join(",\n"+gap)+"\n"+o+"}":"{"+u.join(",")+"}";gap=o;return i}}if(typeof Date.prototype.toJSON!=="function"){Date.prototype.toJSON=function(e){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+f(this.getUTCMonth()+1)+"-"+f(this.getUTCDate())+"T"+f(this.getUTCHours())+":"+f(this.getUTCMinutes())+":"+f(this.getUTCSeconds())+"Z":null};String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(e){return this.valueOf()}}var cx=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},rep;if(typeof JSON.stringify!=="function"){JSON.stringify=function(e,t,n){var r;gap="";indent="";if(typeof n==="number"){for(r=0;r<n;r+=1){indent+=" "}}else if(typeof n==="string"){indent=n}rep=t;if(t&&typeof t!=="function"&&(typeof t!=="object"||typeof t.length!=="number")){throw new Error("JSON.stringify")}return str("",{"":e})}}if(typeof JSON.parse!=="function"){JSON.parse=function(text,reviver){function walk(e,t){var n,r,i=e[t];if(i&&typeof i==="object"){for(n in i){if(Object.prototype.hasOwnProperty.call(i,n)){r=walk(i,n);if(r!==undefined){i[n]=r}else{delete i[n]}}}}return reviver.call(e,t,i)}var j;text=String(text);cx.lastIndex=0;if(cx.test(text)){text=text.replace(cx,function(e){return"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})}if(/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,""))){j=eval("("+text+")");return typeof reviver==="function"?walk({"":j},""):j}throw new SyntaxError("JSON.parse")}}})();String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")};String.prototype.startswith=function(e){return this.indexOf(e)===0};String.prototype.endswith=function(e){var t=this.lastIndexOf(e);if(t==-1)return false;var n=t+e.length;return n==this.length};(function(e,t){function i(e){return Object.prototype.toString.apply(e)==="[object Array]"}var n=function(e,t){return new n.fn.init(e,t)},r=/^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/;n.fn=n.prototype={init:function(e,t){var n,i,s,o;if(!e){return this}if(e.nodeType){this.context=this[0]=e;this.length=1;return this}if(typeof e==="string"){n=r.exec(e);if(n&&(n[1]||!t)){i=document.getElementById(n[2]);if(i){if(i.id!==n[2]){throw new Error("mQuery.find() needed to handle IE returning items by name instead of by id")}this.length=1;this[0]=i}this.context=document;this.selector=e;return this}}throw new Error('mQuery must be extended to handle selector "'+e+'" (incl. context)')},each:function(e,t){return n.each(this,e,t)},first:function(e){return n.first(this)},selector:"",length:0};n.fn.init.prototype=n.fn;n.extend=n.fn.extend=function(){var e=arguments[0]||{},t=1,n=arguments.length,r=false,i,s,o,u;if(n===t){e=this;--t}for(;t<n;t++){if((i=arguments[t])!=null){for(s in i){o=e[s];u=i[s];if(e===u)continue;e[s]=u}}}return e};n.extend({each:function(e,t,n){if(i(e)){for(var r=0;r<e.length;r++){t(r,e[r])}}else{for(var s in e){t(s,e[s])}}},first:function(e){return e[0]}});e.mQuery=e.$=n})(window);var SCM=function($){function loadXML(){var e=new ActiveXObject("Msxml2.DOMDocument.6.0");var t=EvaluateRelevance("current fixlet as xml");e.loadXML(t);e.setProperty("SelectionLanguage","XPath");var n=mimeField(e,"x-fixlet-scm-metadata");metadata=JSON.parse(n);return{doc:e,metadata:metadata}}function integer_range(e,t,n){if(!is_integer(e))return false;return e>=t&&e<=n}function is_integer(e){return/^(-|)\d+$/.test(e)}function is_string(e){return typeof e==="string"}function escapeRegex(e){return e.replace(/\\\\/g,"\\\\\\\\")}function unescapeRegex(e){return e.replace(/\\\\/g,"\\")}function isOfDssType(e,t){if(t==="integer")return is_integer(e);if(t==="number"||t==="string")return true;throw new Error('Check for type "'+t+'" needed.')}function nodeText(e,t,n){var r=e.selectSingleNode(t);if(r==null)return null;if(n)return r.text=n;return r.text}function mimeField(e,t,n){var r='/BES/Fixlet/MIMEField/Name[.="'+t+'"]/../Value';return nodeText(e,r,n)}function elementValue(e){return e.value.trim()}function coerceToDssType(e,t){if(e=="integer")return parseInt(t);if(e=="number")return parseFloat(t);if(e=="boolean")return t=="0"||t=="false"?false:true;if(e=="string")return t;throw new Error('The type "'+e+'" is not recognized')}function displayValue(e){if(typeof e==undefined||e===""||e===null)return"<none>";return e}function sanitizeInput(e){if(!is_string(e))return e;e=e.replace(/&/g,"&");e=e.replace(/</g,"&lt;");e=e.replace(/>/g,"&gt;");return e}function sanitizeID(e){return e.replace(/[.:]/g,"-")}function quoteKey(e){return"--{"+e+"}--"}function set(e){var t={};$.each(e,function(e,n){t[n]=""});return t}function optionValues(e){var t={};$.each(e,function(e,n){t[n.value]=""});return t}function compareValuesIgnoreCase(e,t){if(e==undefined&&t==undefined)return true;if(is_string(e)&&is_string(t))return e.toLowerCase()==t.toLowerCase();return e==t}function quote(e,t){return t?"%22"+e+"%22":'"'+e+'"'}function sanitizeForRelevance(e,t){if(e.type!="string")return t;t=t.replace(/%/g,"%25");t=t.replace(/"/g,"%22");return t}function sanitizeForRemediation(e,t){if(e.type!="string")return t;if(!e.no_escape_quotes_in_remediation_value){t=t.replace(/"/g,"%22")}return t}function substitueRelevanceValue(e,t,n,r){var r=sanitizeForRelevance(e,r);var i=new RegExp(quoteKey(n),"g");return t.replace(i,r)}function substituteRemediationValue(e,t,n,r){var r=sanitizeForRemediation(e,r);var i=new RegExp(quoteKey(n),"g");return t.replace(i,r)}function saveHandler(e,t){e=is_string(e)?[e]:e;$.each(e,function(e,n){save_handlers[n]=t})}function validateInput(template_id,parameter,value){if(/{|}/.test(value))throw new Error("Curly braces ({}) cannot be used in a parameter value");if(!parameter.disable_validation){if(parameter.validate&&!eval(parameter.validate))throw new Error("The value '"+value+"' is not valid: "+parameter.validate);if(parameter.no_quotes_in_values&&(new Regexp("\"|'","g")).test(value))throw new Error("Quotation marks in value are not permitted for this check");if(parameter.type&&!isOfDssType(value,parameter.type))throw new Error("The value '"+value+"' is not of type '"+parameter.type+"'");if(value.length&&value.length>512)throw new Error("String value is too long to be used in relevance.")}return coerceToDssType(parameter.type,value)}function updateParameters(){$.each(parameters,function(e,t){var n=t.input_category||"default";var r=save_handlers[n],i;if(r&&(i=r.call(null,e,t))!==null){var s=validateInput(e,t,i);if(compareValuesIgnoreCase(s,t.default_value)){delete t["desired_value"]}else{t.desired_value=s}}})}function handleError(e){if(e.message=="class UserCancelled")return;if(/you do not have permission to edit/.test(e.message)){alert("This fixlet must be copied to a custom site before any parameters can be set.");return}alert("There was a problem: "+e.message)}function registerSaveHandlers(){saveHandler("default",function(e,t){var n=$("#"+sanitizeID(e)+"-input").first();if(!n){return null}var r=elementValue(n);if(t.oval_regex){r=escapeRegex(r)}return r});saveHandler(["audit_subcategory","audit_category"],function(e,t){var n=sanitizeID(e);var r=document.getElementById("radio-"+n+"-success-enable").checked;var i=document.getElementById("radio-"+n+"-success-disable").checked;var s=document.getElementById("radio-"+n+"-success-ignore").checked;var o=document.getElementById("radio-"+n+"-failure-enable").checked;var u=document.getElementById("radio-"+n+"-failure-disable").checked;var a=document.getElementById("radio-"+n+"-failure-ignore").checked;var f="IGNORED|IGNORED";if(r&&o){f="ENABLED|ENABLED"}else if(r&&u){f="ENABLED|DISABLED"}else if(r&&a){f="ENABLED|IGNORED"}else if(i&&o){f="DISABLED|ENABLED"}else if(i&&u){f="DISABLED|DISABLED"}else if(i&&a){f="DISABLED|IGNORED"}else if(s&&o){f="IGNORED|ENABLED"}else if(s&&u){f="IGNORED|DISABLED"}return f});var e=$("#save_parameters_button").first();if(e)e.onclick=function(e){SCM.save_xml()}}function initializeDefault(e,t){var n=$("#"+sanitizeID(t)+"-input").first();if(n)n.value=e}function initializeInputControls(e,t){var n=effectiveValue(t);switch(t.input_category){case undefined:case"default":initializeDefault(n,e);break;case"audit_category":case"audit_subcategory":initializeAuditPolicy(n,e);break}}function initializeAuditPolicy(e,t){var n=sanitizeID(t);var r=document.getElementById("radio-"+n+"-success-enable");var i=document.getElementById("radio-"+n+"-success-disable");var s=document.getElementById("radio-"+n+"-success-ignore");var o=document.getElementById("radio-"+n+"-failure-enable");var u=document.getElementById("radio-"+n+"-failure-disable");var a=document.getElementById("radio-"+n+"-failure-ignore");if(r){r.checked=false;i.checked=false;s.checked=false;o.checked=false;u.checked=false;a.checked=false;switch(e){case"ENABLED|ENABLED":r.checked=true;o.checked=true;break;case"ENABLED|DISABLED":r.checked=true;u.checked=true;break;case"ENABLED|IGNORED":r.checked=true;a.checked=true;break;case"DISABLED|ENABLED":i.checked=true;o.checked=true;break;case"DISABLED|DISABLED":i.checked=true;u.checked=true;break;case"DISABLED|IGNORED":i.checked=true;a.checked=true;break;case"IGNORED|ENABLED":s.checked=true;o.checked=true;break;case"IGNORED|DISABLED":s.checked=true;u.checked=true;break;default:s.checked=true;a.checked=true}}}function effectiveValue(e){var t=e.desired_value;if(e.oval_regex){t=unescapeRegex(t)}return"desired_value"in e?t:e.default_value}function updateParameterDescriptions(){$.each(parameters,function(e,t){var n=$("#"+sanitizeID(e)+"-desired-value").first();if(!t.disable_javascript&&n){var r=effectiveValue(t);n.innerHTML=sanitizeInput(displayValue(r))}initializeInputControls(e,t)})}function saveXML(){var e=JSON.stringify(metadata);mimeField(doc,"x-fixlet-scm-metadata",e);var t=updateParameterData();nodeText(doc,"/BES/Fixlet/Relevance[last()]",t.relevance);if(t.remediation)nodeText(doc,"/BES/Fixlet/DefaultAction/ActionScript",t.remediation);var n=EvaluateRelevance("id of current fixlet");EditFixlet(n,doc.xml);updateParameterDescriptions();showStatusMessage()}function showStatusMessage(){$("#save-msg").first().style.display="inline";setTimeout("SCM.hide_status_msg()",5e3)}function updateParameterData(){var e=mimeField(doc,"x-fixlet-scm-tp-relevance"),t=mimeField(doc,"x-fixlet-scm-tp-remediation"),n=t?JSON.parse(t):{},r=n["default"]||"",i=true;$.each(parameters,function(t,n){var i=effectiveValue(n);if(i!=null){e=substitueRelevanceValue(n,e,t,i);r=substituteRemediationValue(n,r,t,i)}});return{relevance:e,remediation:r}}function updateNativeFixletFields(){$.each(METADATA_TO_FIXLET_FIELDS,function(e,t){var n=$("#"+e+"-display").first();if(n&&e in metadata){n.innerHTML=nodeText(doc,"/BES/Fixlet/"+t)}})}var SCM={},fixlet=loadXML(),doc=fixlet.doc,metadata=fixlet.metadata,parameters=metadata.scm_parameters,save_handlers={},input_handlers={};SCM.hide_status_msg=function(){$("#save-msg").first().style.display="none"};var METADATA_TO_FIXLET_FIELDS={category:"Category",download_size:"DownloadSize",source:"Source",source_id:"SourceID",source_release_date:"SourceReleaseDate",source_severity:"SourceSeverity"};SCM.save_xml=function(){try{try{updateParameters()}catch(e){alert(e.message);return}saveXML()}catch(e){handleError(e)}};SCM.redraw=function(){updateParameterDescriptions();updateNativeFixletFields();registerSaveHandlers()};return SCM}(mQuery);window.onload=function(){if(this.ENV&&ENV.SCM_ENV=="test")return;SCM.redraw()}</script> ]]></Description>
		<Relevance><![CDATA[(name of it = "Win2016" and product type of it != nt domain controller product type) of operating system]]></Relevance>
		<Relevance><![CDATA[not exists 1 whose ((((((((((((((exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessAccountInfo" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessCalendar" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessCallHistory" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessCamera" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessContacts" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessEmail" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessLocation" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessMessaging" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessMicrophone" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessMotion" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessRadios" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessTrustedDevices" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsSyncWithDevices" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessPhone" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("2"))) of values "LetAppsAccessNotifications" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0))]]></Relevance>
		<Category>OCISO_SecEng_Custom</Category>
		<DownloadSize>0</DownloadSize>
		<Source>CIS Microsoft Win2016 Benchmark</Source>
		<SourceID>CCE|NULL</SourceID>
		<SourceSeverity>N/A</SourceSeverity>
		<MIMEField>
			<Name>x-fixlet-scm-control</Name>
			<Value>CCE|NULL</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-requested-id</Name>
			<Value></Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-id</Name>
			<Value>20ldluxk-5erz-51ve-k504-liqkc3a71w16</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-batch-id</Name>
			<Value>20170519T182626</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-checksum</Name>
			<Value></Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-sentinel-idref</Name>
			<Value>f3075d8e-9b00-5600-9d88-18883e59e09a</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-os</Name>
			<Value>xccdf_org.cisecurity.benchmarks_benchmark_1.0.0_CIS_Microsoft_Windows_Server_2016_Security_Benchmark</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-metadata</Name>
			<Value><![CDATA[{"title":"(L2) Ensure 'Let Windows apps *' is set to 'Enabled: Force Deny'","description":"<p xmlns=\"http://www.w3.org/1999/xhtml\">These policy settings specify whether Windows apps can access personal data, resources or other applications.</p> <p xmlns=\"http://www.w3.org/1999/xhtml\">The recommended state for this setting is: <span class=\"inline_block\">Enabled: Force Deny</span>.</p>\n<br /><br />\n<b>Rationale:</b><br />\n                  <p xmlns=\"http://www.w3.org/1999/xhtml\">The following 15 settings are in scope: Let Windows apps access account information, Let Windows apps access call history, Let Windows apps access contacts, Let Windows apps access email, Let Windows apps access location, Let Windows apps access messaging, Let Windows apps access motion, Let Windows apps access the calendar, Let Windows apps access the camera, Let Windows apps access the microphone, Let Windows apps access trusted devices, Let Windows apps control radios, Let Windows apps sync with devices, Let Windows apps make phone calls, Let Windows apps access notifications</p>\n               \n<br /><br />\n<b>Remediation:</b><br />\n                  <div xmlns=\"http://www.w3.org/1999/xhtml\">\n                     <p>\n                        <p>To establish the recommended configuration via GP, set the following UI path to <span class=\"inline_block\">Enabled: Force Deny</span>:</p>\n                        <code class=\"code_block\">Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access account information
 | Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access call history | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access contacts
 | Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access email | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access location | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access messaging | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access motion | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access the calendar | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access the camera | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access the microphone | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access trusted devices
 | Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps control radios
 | Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps sync with devices | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps make phone calls | 
Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\App Privacy\\Let Windows apps access notifications</code>\n                        <p class=\"bold\">Impact:</p>\n                        <p>\n                           <p>In an enterprise environment where you want to maintain user privacy, Windows apps should not need or require access to personal data, resources or other applications.</p>\n                        </p>\n                     </p>\n                  </div>\n               ","source_id":"CCE|NULL","category":"OCISO_SecEng_Custom","source_release_date":"Mon, 26 Feb 2018 12:00:00","source_severity":"N/A","scm_parameters":{"c1":{"title":"LetAppsAccessAccountInfo","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":1},"c2":{"title":"LetAppsAccessCalendar","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":2},"c3":{"title":"LetAppsAccessCallHistory","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":3},"c4":{"title":"LetAppsAccessCamera","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":4},"c5":{"title":"LetAppsAccessContacts","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":5},"c6":{"title":"LetAppsAccessEmail","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":6},"c7":{"title":"LetAppsAccessLocation","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":7},"c8":{"title":"LetAppsAccessMessaging","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":8},"c9":{"title":"LetAppsAccessMicrophone","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":9},"c10":{"title":"LetAppsAccessMotion","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":10},"c11":{"title":"LetAppsAccessRadios","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":11},"c12":{"title":"LetAppsAccessTrustedDevices","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":12},"c13":{"title":"LetAppsSyncWithDevices","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":13},"c14":{"title":"LetAppsAccessPhone","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":14},"c15":{"title":"LetAppsAccessNotifications","type":"string","default_value":"2","human_default_value":"2","measured_value_analysis_idref":"20kpqj3m-ukvc-51q1-u74c-vcijww83ds16","measured_value_analysis_property":15}}}]]></Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-selected</Name>
			<Value>true</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-tp-relevance</Name>
			<Value><![CDATA[not exists 1 whose ((((((((((((((exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c1}--"))) of values "LetAppsAccessAccountInfo" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c2}--"))) of values "LetAppsAccessCalendar" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c3}--"))) of values "LetAppsAccessCallHistory" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c4}--"))) of values "LetAppsAccessCamera" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c5}--"))) of values "LetAppsAccessContacts" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c6}--"))) of values "LetAppsAccessEmail" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c7}--"))) of values "LetAppsAccessLocation" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c8}--"))) of values "LetAppsAccessMessaging" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c9}--"))) of values "LetAppsAccessMicrophone" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c10}--"))) of values "LetAppsAccessMotion" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c11}--"))) of values "LetAppsAccessRadios" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c12}--"))) of values "LetAppsAccessTrustedDevices" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c13}--"))) of values "LetAppsSyncWithDevices" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c14}--"))) of values "LetAppsAccessPhone" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0)) and exists (concatenation ", " of (it as string) of ((type of it = "REG_DWORD") of it and ((if (type of it = "REG_BINARY" or type of it = "REG_NONE") then (hexadecimal integer (it as string)) else (it as integer)) of it = (it as integer) of ("--{c15}--"))) of values "LetAppsAccessNotifications" of keys "Software\\Policies\\Microsoft\\Windows\\AppPrivacy" of keys "HKEY_LOCAL_MACHINE" of native registry) whose (number of substrings separated by ", " whose (it is not "") of it > 0 and number of substrings separated by ", " whose (it is not "") whose (it as boolean is False) of it = 0))]]></Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-scm-tp-remediation</Name>
			<Value>{"default":"\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessAccountInfo\" /t REG_DWORD /d \"--{c1}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessCalendar\" /t REG_DWORD /d \"--{c2}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessCallHistory\" /t REG_DWORD /d \"--{c3}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessCamera\" /t REG_DWORD /d \"--{c4}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessContacts\" /t REG_DWORD /d \"--{c5}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessEmail\" /t REG_DWORD /d \"--{c6}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessLocation\" /t REG_DWORD /d \"--{c7}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessMessaging\" /t REG_DWORD /d \"--{c8}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessMicrophone\" /t REG_DWORD /d \"--{c9}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessMotion\" /t REG_DWORD /d \"--{c10}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessRadios\" /t REG_DWORD /d \"--{c11}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessTrustedDevices\" /t REG_DWORD /d \"--{c12}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsSyncWithDevices\" /t REG_DWORD /d \"--{c13}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessPhone\" /t REG_DWORD /d \"--{c14}--\" /f\n\nwaithidden \"{pathname of system folder}\\reg.exe\" add \"HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows\\AppPrivacy\" /v \"LetAppsAccessNotifications\" /t REG_DWORD /d \"--{c15}--\" /f\n    "}</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-xccdf-benchmark</Name>
			<Value>xccdf_org.cisecurity.benchmarks_benchmark_1.0.0_CIS_Microsoft_Windows_Server_2016_Security_Benchmark</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-xccdf-profile</Name>
			<Value>xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Member_Server</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-xccdf-rule</Name>
			<Value>xccdf_org.cisecurity.benchmarks_rule_18.9.5.1_Ensure_Let_Windows_apps_is_set_to_Enabled_Force_Deny</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-xccdf-xml</Name>
			<Value>Not available</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Mon, 26 Feb 2018 12:00:00 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to remediate local policy for this setting.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell">
waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessAccountInfo" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessCalendar" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessCallHistory" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessCamera" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessContacts" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessEmail" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessLocation" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessMessaging" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessMicrophone" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessMotion" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessRadios" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessTrustedDevices" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsSyncWithDevices" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessPhone" /t REG_DWORD /d "2" /f

waithidden "{pathname of system folder}\reg.exe" add "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\AppPrivacy" /v "LetAppsAccessNotifications" /t REG_DWORD /d "2" /f
    </ActionScript>
		</DefaultAction>
	</Fixlet>
</BES>